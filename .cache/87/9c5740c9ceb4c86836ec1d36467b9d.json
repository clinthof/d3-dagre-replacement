{"id":"node_modules/dagre-d3/lib/intersect/intersect-line.js","dependencies":[{"name":"/Users/felixclinthorne/Downloads/dagre-d3-graph-forked(2)/package.json","includedInParent":true,"mtime":1661390360000},{"name":"/Users/felixclinthorne/Downloads/dagre-d3-graph-forked(2)/node_modules/dagre-d3/package.json","includedInParent":true,"mtime":1661376024718}],"generated":{"js":"module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/dagre-d3/lib/intersect/intersect-line.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/dagre-d3/lib/intersect/intersect-line.js":"module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n"},"lineCount":71}},"error":null,"hash":"0786b625ce9e2fdc2ee8163fb32f8206","cacheData":{"env":{}}}